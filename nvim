let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +6 ~/.config/nvim/lua/plugins/lsp/cmp.lua
badd +5 ~/.config/nvim/lua/plugins/lsp/lspconfig.lua
badd +4 ~/.config/nvim/lua/plugins/lsp/mason.lua
badd +14 ~/.config/nvim/lua/themes/edge.lua
badd +10 lua/plugins/aesthetics/notify.lua
badd +31 lua/plugins/cpp/overseer.lua
badd +54 lua/plugins/aesthetics/lualine.lua
badd +164 lua/plugins/config/cfg_lualine.lua
argglobal
%argdel
$argadd init.lua
set lines=52 columns=206
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit lua/ui/highlights.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe '2resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
exe '3resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 3resize ' . ((&columns * 102 + 103) / 206)
argglobal
let s:l = 1 - ((0 * winheight(0) + 24) / 49)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("lua/ui/colors.lua", ":p")) | buffer lua/ui/colors.lua | else | edit lua/ui/colors.lua | endif
if &buftype ==# 'terminal'
  silent file lua/ui/colors.lua
endif
balt ~/.config/nvim/lua/plugins/lsp/lspconfig.lua
let s:l = 40 - ((13 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 40
normal! 021|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/config/global_settings.lua", ":p")) | buffer ~/.config/nvim/lua/config/global_settings.lua | else | edit ~/.config/nvim/lua/config/global_settings.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/config/global_settings.lua
endif
let s:l = 2 - ((1 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 07|
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe '2resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
exe '3resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 3resize ' . ((&columns * 102 + 103) / 206)
tabnext
edit lua/keymaps/which_key/wk_single_key.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe '2resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
exe '3resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 3resize ' . ((&columns * 102 + 103) / 206)
argglobal
let s:l = 6 - ((5 * winheight(0) + 24) / 49)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 6
normal! 03|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/keymaps/which_key/init.lua", ":p")) | buffer ~/.config/nvim/lua/keymaps/which_key/init.lua | else | edit ~/.config/nvim/lua/keymaps/which_key/init.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/keymaps/which_key/init.lua
endif
let s:l = 11 - ((10 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 11
normal! 031|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/keymaps/which_key/wk_g_tabs.lua", ":p")) | buffer ~/.config/nvim/lua/keymaps/which_key/wk_g_tabs.lua | else | edit ~/.config/nvim/lua/keymaps/which_key/wk_g_tabs.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/keymaps/which_key/wk_g_tabs.lua
endif
let s:l = 4 - ((3 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 4
normal! 03|
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe '2resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
exe '3resize ' . ((&lines * 24 + 26) / 52)
exe 'vert 3resize ' . ((&columns * 102 + 103) / 206)
tabnext
edit lua/plugins/config/cfg_lualine.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt lua/plugins/aesthetics/lualine.lua
let s:l = 164 - ((14 * winheight(0) + 11) / 23)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 164
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("lua/plugins/aesthetics/notify.lua", ":p")) | buffer lua/plugins/aesthetics/notify.lua | else | edit lua/plugins/aesthetics/notify.lua | endif
if &buftype ==# 'terminal'
  silent file lua/plugins/aesthetics/notify.lua
endif
balt ~/.config/nvim/lua/plugins/lsp/mason.lua
let s:l = 13 - ((12 * winheight(0) + 11) / 23)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 13
normal! 08|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/themes/onedarkpro.lua", ":p")) | buffer ~/.config/nvim/lua/themes/onedarkpro.lua | else | edit ~/.config/nvim/lua/themes/onedarkpro.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/themes/onedarkpro.lua
endif
balt ~/.config/nvim/lua/themes/edge.lua
let s:l = 5 - ((4 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 5
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/plugins/lsp/lspconfig.lua", ":p")) | buffer ~/.config/nvim/lua/plugins/lsp/lspconfig.lua | else | edit ~/.config/nvim/lua/plugins/lsp/lspconfig.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/plugins/lsp/lspconfig.lua
endif
balt lua/plugins/aesthetics/notify.lua
let s:l = 19 - ((18 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 19
normal! 07|
wincmd w
wincmd =
tabnext 3
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
