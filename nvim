let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +22 lua/plugins/config/lsp/cfg_lsp_server_setup_opts.lua
badd +13 lua/plugins/cpp/overseer.lua
badd +1 ~/.config/nvim/lua/custom_commands/overseer_commands.lua
badd +1 lua/custom_commands/utils/ovs_utils.lua
badd +25 lua/plugins/config/cfg_overseer_templates.lua
badd +7 init.lua
badd +1 lua/keymaps/which_key/wk_o_overseer.lua
badd +5 lua/ui/highlights.lua
badd +106 lua/config/global_settings.lua
badd +1 lua/ui/kinds.lua
badd +47 lua/ui/colors.lua
badd +5 lua/themes/edge.lua
badd +74 lua/plugins/aesthetics/noice.lua
badd +10 lua/plugins/core/treesitter.lua
badd +23 lua/plugins/lsp/lspconfig.lua
badd +5 lua/plugins/lsp/mason.lua
badd +28 lua/plugins/config/lsp/cfg_lsp_server_setup.lua
badd +1 lua/plugins/config/lsp/lsp_handlers.lua
badd +19 lua/plugins/lsp/cmp.lua
badd +22 lua/plugins/config/lsp/lsp_ui_customization.lua
badd +1 ~/.config/nvim/lua/config/init.lua
badd +11 ~/.config/nvim/lua/custom_commands/autocmds.lua
badd +3 ~/.config/nvim/lua/keymaps/which_key/init.lua
badd +11 ~/.config/nvim/lua/keymaps/which_key/wk_a_dap.lua
badd +9 ~/.config/nvim/lua/keymaps/which_key/wk_e_tabedit.lua
badd +20 lua/plugins/core/no_config_plugins.lua
badd +1 lua/plugins/cpp/neotest.lua
badd +2 ~/.config/nvim/lua/plugins/cpp/dap.lua
badd +9 lua/plugins/core/neotest_gtest.lua
argglobal
%argdel
$argadd init.lua
set lines=52 columns=206
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit lua/plugins/cpp/neotest.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt lua/plugins/config/lsp/cfg_lsp_server_setup_opts.lua
let s:l = 10 - ((9 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 10
normal! 07|
wincmd w
argglobal
if bufexists(fnamemodify("lua/plugins/lsp/mason.lua", ":p")) | buffer lua/plugins/lsp/mason.lua | else | edit lua/plugins/lsp/mason.lua | endif
if &buftype ==# 'terminal'
  silent file lua/plugins/lsp/mason.lua
endif
balt lua/plugins/config/lsp/cfg_lsp_server_setup_opts.lua
let s:l = 4 - ((3 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 4
normal! 05|
wincmd w
argglobal
if bufexists(fnamemodify("lua/plugins/core/neotest_gtest.lua", ":p")) | buffer lua/plugins/core/neotest_gtest.lua | else | edit lua/plugins/core/neotest_gtest.lua | endif
if &buftype ==# 'terminal'
  silent file lua/plugins/core/neotest_gtest.lua
endif
balt lua/plugins/cpp/overseer.lua
let s:l = 9 - ((8 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 9
normal! 015|
wincmd w
3wincmd w
wincmd =
tabnext
edit ~/.config/nvim/lua/keymaps/which_key/wk_single_key.lua
argglobal
balt lua/plugins/config/lsp/cfg_lsp_server_setup_opts.lua
let s:l = 35 - ((23 * winheight(0) + 24) / 49)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 35
normal! 025|
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
