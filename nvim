let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +32 ~/.config/nvim/lua/keymaps/which_key/wk_single_key.lua
badd +44 lua/custom_commands/user_commands.lua
badd +6 ~/.config/nvim/lua/notify_config/functions.lua
badd +14 lua/keymaps/which_key/wk_a_dap.lua
badd +5 lua/config/overseer_templates_cfg.lua
badd +48 lua/plugins/cpp/overseer.lua
badd +5 lua/overseer/component/custom/open_terminal.lua
badd +24 ~/.config/nvim/lua/overseer/component/custom/open_terminal_on_failed.lua
badd +12 lua/overseer/component/custom/open_trouble_on_failed.lua
badd +1 man://end(3)
argglobal
%argdel
$argadd init.lua
set lines=55 columns=206
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit lua/ui/colors.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 102 + 103) / 206)
exe 'vert 2resize ' . ((&columns * 103 + 103) / 206)
argglobal
let s:l = 38 - ((37 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 38
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("lua/ui/colors.lua", ":p")) | buffer lua/ui/colors.lua | else | edit lua/ui/colors.lua | endif
if &buftype ==# 'terminal'
  silent file lua/ui/colors.lua
endif
let s:l = 37 - ((36 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 37
normal! 023|
wincmd w
exe 'vert 1resize ' . ((&columns * 102 + 103) / 206)
exe 'vert 2resize ' . ((&columns * 103 + 103) / 206)
tabnext
edit ~/.config/nvim/lua/plugins/core/telescope.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
argglobal
let s:l = 1 - ((0 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 08|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/plugins/core/telescope.lua", ":p")) | buffer ~/.config/nvim/lua/plugins/core/telescope.lua | else | edit ~/.config/nvim/lua/plugins/core/telescope.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/plugins/core/telescope.lua
endif
let s:l = 1 - ((0 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 08|
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
tabnext
edit ~/.config/nvim/lua/keymaps/which_key/wk_b_tabs.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe '2resize ' . ((&lines * 26 + 27) / 55)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
exe '3resize ' . ((&lines * 25 + 27) / 55)
exe 'vert 3resize ' . ((&columns * 102 + 103) / 206)
argglobal
let s:l = 22 - ((21 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 22
normal! 04|
wincmd w
argglobal
if bufexists(fnamemodify("lua/keymaps/which_key/wk_w_windows.lua", ":p")) | buffer lua/keymaps/which_key/wk_w_windows.lua | else | edit lua/keymaps/which_key/wk_w_windows.lua | endif
if &buftype ==# 'terminal'
  silent file lua/keymaps/which_key/wk_w_windows.lua
endif
let s:l = 12 - ((11 * winheight(0) + 13) / 26)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 12
let s:c = 39 - ((34 * winwidth(0) + 51) / 102)
if s:c > 0
  exe 'normal! ' . s:c . '|zs' . 39 . '|'
else
  normal! 039|
endif
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/keymaps/which_key/wk_b_tabs.lua", ":p")) | buffer ~/.config/nvim/lua/keymaps/which_key/wk_b_tabs.lua | else | edit ~/.config/nvim/lua/keymaps/which_key/wk_b_tabs.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/keymaps/which_key/wk_b_tabs.lua
endif
let s:l = 23 - ((22 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 23
normal! 013|
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 103) / 206)
exe '2resize ' . ((&lines * 26 + 27) / 55)
exe 'vert 2resize ' . ((&columns * 102 + 103) / 206)
exe '3resize ' . ((&lines * 25 + 27) / 55)
exe 'vert 3resize ' . ((&columns * 102 + 103) / 206)
tabnext
edit lua/config/overseer_templates_cfg.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt lua/keymaps/which_key/wk_a_dap.lua
let s:l = 5 - ((4 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 5
normal! 016|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/notify_config/functions.lua", ":p")) | buffer ~/.config/nvim/lua/notify_config/functions.lua | else | edit ~/.config/nvim/lua/notify_config/functions.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/notify_config/functions.lua
endif
balt lua/config/overseer_templates_cfg.lua
let s:l = 6 - ((5 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 6
normal! 03|
wincmd w
argglobal
if bufexists(fnamemodify("lua/plugins/cpp/overseer.lua", ":p")) | buffer lua/plugins/cpp/overseer.lua | else | edit lua/plugins/cpp/overseer.lua | endif
if &buftype ==# 'terminal'
  silent file lua/plugins/cpp/overseer.lua
endif
balt ~/.config/nvim/lua/overseer/component/custom/open_terminal_on_failed.lua
let s:l = 14 - ((13 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 14
normal! 011|
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/overseer/component/custom/open_terminal_on_failed.lua", ":p")) | buffer ~/.config/nvim/lua/overseer/component/custom/open_terminal_on_failed.lua | else | edit ~/.config/nvim/lua/overseer/component/custom/open_terminal_on_failed.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/overseer/component/custom/open_terminal_on_failed.lua
endif
balt lua/plugins/cpp/overseer.lua
let s:l = 5 - ((4 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 5
normal! 08|
wincmd w
2wincmd w
wincmd =
tabnext 4
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
