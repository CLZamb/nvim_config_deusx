let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 init.lua
badd +16 lua/plugins/core/general/session.lua
badd +12 lua/plugins/core/general/whichkey.lua
badd +15 lua/plugins/init.lua
badd +14 lua/plugins/core/general/nvimtree.lua
badd +13 lua/config/lazy.lua
badd +19 lua/plugins/core/general/telescope.lua
badd +1 ~/.config/nvim/lua/plugins/core/general/aerial.lua
badd +15 lua/plugins/lsp/cmp.lua
badd +18 lua/config/lsp/kinds/init.lua
badd +1 lua/config/setting.lua
badd +6 lua/plugins/core/general/barbecue.lua
argglobal
%argdel
$argadd init.lua
set lines=54 columns=230
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit lua/config/setting.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 86 + 115) / 230)
exe '2resize ' . ((&lines * 20 + 27) / 54)
exe 'vert 2resize ' . ((&columns * 143 + 115) / 230)
exe '3resize ' . ((&lines * 30 + 27) / 54)
exe 'vert 3resize ' . ((&columns * 143 + 115) / 230)
argglobal
balt lua/plugins/init.lua
let s:l = 22 - ((21 * winheight(0) + 25) / 51)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 22
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("~/.config/nvim/lua/plugins/core/general/aerial.lua", ":p")) | buffer ~/.config/nvim/lua/plugins/core/general/aerial.lua | else | edit ~/.config/nvim/lua/plugins/core/general/aerial.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/nvim/lua/plugins/core/general/aerial.lua
endif
balt lua/config/setting.lua
let s:l = 1 - ((0 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("lua/plugins/core/general/nvimtree.lua", ":p")) | buffer lua/plugins/core/general/nvimtree.lua | else | edit lua/plugins/core/general/nvimtree.lua | endif
if &buftype ==# 'terminal'
  silent file lua/plugins/core/general/nvimtree.lua
endif
balt lua/plugins/core/general/barbecue.lua
let s:l = 19 - ((18 * winheight(0) + 15) / 30)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 19
normal! 0
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 86 + 115) / 230)
exe '2resize ' . ((&lines * 20 + 27) / 54)
exe 'vert 2resize ' . ((&columns * 143 + 115) / 230)
exe '3resize ' . ((&lines * 30 + 27) / 54)
exe 'vert 3resize ' . ((&columns * 143 + 115) / 230)
tabnext
edit lua/plugins/core/general/whichkey.lua
argglobal
let s:l = 164 - ((24 * winheight(0) + 25) / 50)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 164
normal! 089|
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
